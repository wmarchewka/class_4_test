NOW USING RPI model 4
There is a new 4DSYSTEMS kernel version:
wget http://4dsystems.com.au/downloads/4DPi/All/gen4-hats_4-19-57-v7l+_v1.0.tar.gz
sudo tar -xzvf gen4-hats_4-19-57-v7l+_v1.0.tar.gz -C /
DO NOT UPDATE OR UPGRADE THE RPI SOFTWARE.  THIS WILL CAUSE THE RPI KERNEK TO BE UPDATED AND WILL NOT MATCH THE
DISPLAY DRIVER KERNEL VERSION. AS OF NOW IT IS STUCK AT 4_19_57 WHIHC IS BUSTER WITH A DATE OF 7_12_2019

***************************************************************************************************************
Raspberry Pi 3 Model B+
To set static IP on the image
1. Look for "cmdline.txt" on image once expanded to the SD card.
2. edit "cmdline.txt" and app "ip=10.0.0.111" to the end of the text line
3. the ip can then be set other places to ensure a more permanent connection.
***************************************************************************************************************
TO ADD A PROXY FOR PIP ON THE RPI RUN THE FOLLOWING:
This will add the proxy server to the https_proxy environment variable
export https_proxy="ny1.coia.siemens.net:9400"
***************************************************************************************************************
Static IP set at 10.0.0.111
user:pi
pass:siemens123
***************************************************************************************************************
MUST SET BOARD TO BMC PIN NUMBERING !!!
GPIO.setmode(GPIO.BCM)
***************************************************************************************************************
To enable SSH:
1. add a file called "ssh" to the root of the image once expanded.  you can do this on windows.
***************************************************************************************************************
To enable SPI:
1. find and edit "boot/config.txt"
2. ?????  add line    "dtoverlay=spi1-0cs"
3 add line dtoverlay=spi1-2cs
***************************************************************************************************************
To update the rpi once you at a command line:
sudo apt-get update
sudo apt-get upgrade
sudo reboot
***************************************************************************************************************
EVEn though the 4D SYSTEMS disaply uses the I2C for the touch display, it is available for us to use.  Not sure how.
***************************************************************************************************************
if lines appear in the display, try decreasing the compression amount and clock frequency.  You can change them or add them
to the /boot/cmdline.txt  the values are:
4dpi.frequency=64000000 or 48000000 or etc
4dpi.compress=7 or 6 or 5 or etc
4dpi.rotate=0 or 90 or 180 or 270
***************************************************************************************************************
you must download a kernel driver for the display use the command:
wget http://4dsystems.com.au/downloads/4DPi/All/gen4-hats_4-19-57-v7l+_v1.0.tar.gz
then install:
***************************************************************************************************************
portable uses both SPI0 (display) and SPI1 (peripherals on the board)
***************************************************************************************************************
in order to get the graphic GUI to display on the rpi when run remotely from pycharm, we must add
an environment variable to the Run Configuration.  To do this, in pycharm, go to RUN/EDIT CONFIGURATIONS.
Select the file that contains the GUI.  In the ENIVRONMENT VARIABLES section add "DISPLAY"as the name
and ":0.0" as hte value.  This will then set an environment variable on the rpi that sets the DISPLAY to point
to the X11 output that is running.
***************************************************************************************************************
TO INSTALL PYQT5
In Raspbian Stretch Lite the following worked for me:
cd
sudo apt-get install qt5-default pyqt5-dev pyqt5-dev-tools
***************************************************************************************************************
The Linux kernel is not suitable for real time applications â€“ it is a multitasking O/S and another process
may be given priority over the CPU, causing jitter in your program. If you are after true real-time performance
 and predictability, buy yourself an Arduino http://www.arduino.cc ! Or make an add-on board with a small
  microcontroller which handles time critical code and let the RPi handle what it does best; ethernet connection,
   user interface, usb, bluetooth connection, WiFi, etc.
***************************************************************************************************************
VERSIONING
Another option is to use the git commit id instead of a BUILDVERSION:
import git
COMMITID = git.Repo().head.object.hexsha[:7]    # 270ac70
(This requires pip install gitpython first)
Then it's possible to compare it with the current commit ID with git log or git rev-parse --short HEAD
(7 digits is the Git default for a short SHA).
***************************************************************************************************************
PIGPIO
we are using PIGPIO instead of rpi.GPIO.  a daemon must be ran at bootup of the pi for the PIGPIO to talk to.
sudo systemctl enable pigpiod
***************************************************************************************************************
add fsck.mode=force or fsck.mode=auto to boot/cmdline.txt to force checking of file system upon boot
***************************************************************************************************************
Setup RAM DRIVE for logging of files, etc so as to not have so many writes to SD card
Goal is to have a 1MB directory in RAM for temporarily storage.
First create the tmp dir:
 sudo mkdir /var/ramdrive
then edit the fstab file by
 sudo nano /etc/fstab
and add the line
 tmpfs /var/ramdrive tmpfs nodev,nosuid,size=1M 0 0
save and close the file. Now issue
 sudo mount -a
To check if your operation succeeded issue
 df
which should report (among the other disks) a tmpfs with 1024 1K blocks (=1MB) as /var/tmp
 pi@raspberrypi ~ $ df
 Filesystem     1K-blocks    Used Available Use% Mounted on
 rootfs           3807952 1814024   1820896  50% /
 /dev/root        3807952 1814024   1820896  50% /
 devtmpfs          183596       0    183596   0% /dev
 tmpfs              38372     268     38104   1% /run
 tmpfs               5120       0      5120   0% /run/lock
 tmpfs              76740       0     76740   0% /run/shm
 /dev/mmcblk0p1     57288   18544     38744  33% /boot
 tmpfs               1024       4      1020   1% /var/ramdrive
***************************************************************************************************************
to allow git to get theough the proxy server, we must add the following to git via the command line.
 git config --global http.proxy ny1.coia.siemens.net:9400
***************************************************************************************************************
to use other fonts not normal available, import the font into QT Designer, and also load the font
onto the raspberry pi.  make a .font directory in the pi directory and place fonts in there.
***************************************************************************************************************
Using QT Designer to Design the GUI.  Create a resource file to store and resources that the GUI may need (bitmaps, icons, fonts, etc)
The resource extension is "Qrc" and is located in the same folder as the GUI in the project. It must be compiled before its used on the
rpi.  Use the following command to compile it:
pyrcc5 QTResources.qrc -o QTResources.py
***************************************************************************************************************
to add PI to spi group
Are you a member of group spi?
groups
will list your groups.
If you do not see spi enter the command
sudo adduser pi spi
You will need to logout and log back in for a group change to take effect.
***************************************************************************************************************
to add custom splash screen
https://www.thedigitalpictureframe.com/customize-your-raspberry-pi-splash-screen-raspbian-stretch-april-2019-version/
also:
add disable_splash=1 to /boot/config.txt
***************************************************************************************************************
to remove cursor
edit /etc/lightdm/lightdm.conf
look for xserver-command=X, then add -nocursor
It should look like this: xserver-command=X -nocursor
***************************************************************************************************************
was getting a error starting the program.
libEGL warning: DRI2: failed to authenticate
Didnt seem to affect the running, but to get rid of it i enabled Fake Open GL support in raspi-config/advanced

#################################################################################################################
TO INSTALL PYSIDE2
sudo apt install python3-pyside
sudo apt install pyside2-tools
sudo apt-get install python3-pyside2.qt3dcore python3-pyside2.qt3dinput python3-pyside2.qt3dlogic python3-pyside2.qt3drender python3-pyside2.qtcharts python3-pyside2.qtconcurrent python3-pyside2.qtcore python3-pyside2.qtgui python3-pyside2.qthelp python3-pyside2.qtlocation python3-pyside2.qtmultimedia python3-pyside2.qtmultimediawidgets python3-pyside2.qtnetwork python3-pyside2.qtopengl python3-pyside2.qtpositioning python3-pyside2.qtprintsupport python3-pyside2.qtqml python3-pyside2.qtquick python3-pyside2.qtquickwidgets python3-pyside2.qtscript python3-pyside2.qtscripttools python3-pyside2.qtsensors python3-pyside2.qtsql python3-pyside2.qtsvg python3-pyside2.qttest python3-pyside2.qttexttospeech python3-pyside2.qtuitools python3-pyside2.qtwebchannel python3-pyside2.qtwebsockets python3-pyside2.qtwidgets python3-pyside2.qtx11extras python3-pyside2.qtxml python3-pyside2.qtxmlpatterns python3-pyside2uic
#################################################################################################################
systemctcl start pigpiod # start it now
systemctl enable pigpiod # start it each boot
systemctl status pigpiod # make sure it started
# https://www.digitalocean.com/community/tutorials/how-to-use-journalctl-to-view-and-manipulate-systemd-logs
journalctl -u pigpiod # Use this to see logs.

#################################################################################################################
Pycharm environment variables:
PYTHONUNBUFFERED=1;DISPLAY=:0.0
#################################################################################################################
to dsiable screen blanking add:
@xset s off
@xset dpms 0 0 0
to
/etc/xdg/lxsession/LXDE-pi/autostart
#################################################################################################################